/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        
        // find out the condition when it is same and when it is not
        // if p is null and q is null trees are identical return true
        // if p is null and q is not null and if q is not null and p is null return false
        // if p.val != q.val return false
        // just find the recusrive call (p.left === q.left && p.right ==== q.right)
        
        if(p == null && q == null){
            return true;
        }else if(p == null || q== null){
            return false;
        }else if(p.val != q.val){
            return false;
        }
        else {
            return (isSameTree(p.left, q.left)&& isSameTree(p.right, q.right));
        }
        
    }
}
